general.headlineLabel							= <html><b><font size=\"4\">Convert an oNote project into Java code</font></b></html>
general.descriptionLabel						= <html><i>1) Select the project source folder where you want the code to be generated.<br>2) Select the JSON file from which it will be generated.<br>3) Declare a namespace or select the namespace option to use.</i></html>
general.projectChooseLabel						= Choose project option:
general.projectOptions.index0					= Create new project
general.projectOptions.index1					= Add to existing project source folder
general.projectPathLabelNew						= New project location:
general.projectPathLabelExisting				= Project source folder*:
general.projectPathLabelExisting.tooltip		= <html><b>Examples:</b><br>- In a standard Java project this would be: /src<br>- In a Maven or Gradle project this would be: /src/main/java</html>
general.jsonPathLabel							= JSON file:
general.namespaceChooseLabel					= Choose namespace option:
general.namespaceOptions.index0					= Use separate namespace
general.namespaceOptions.index1					= Use oNote Schema namespace
general.namespaceOptions.index2					= Use default namespace (main)
general.namespaceDeclareLabel					= Declare a namespace:*
general.namespaceDeclareLabel.tooltip			= <html><b>Namespace should:</b><br>- not start with a digit<br>- not contain Java keywords<br>- only contain letters, digits, underscores, and currency signs<html>
general.codeGenButton							= Generate Java code
general.projectPathFC							= Select project
general.jsonPathFC								= Select JSON file
general.directories								= Directories
general.JSONFiles								= JSON Files
general.warning									= Warning
general.information								= Information

fileChooser.lookInLabelText						= Look In:
fileChooser.fileNameLabelText					= File Name:
fileChooser.folderNameLabelText					= Folder Name:
fileChooser.filesOfTypeLabelText				= Files of Type:
fileChooser.acceptAllFileFilterText				= All Files
fileChooser.upFolderToolTipText					= Up One Level
fileChooser.upFolderAccessibleName				= Up
fileChooser.homeFolderToolTipText				= Home
fileChooser.homeFolderAccessibleName			= Home
fileChooser.newFolderToolTipText				= Create New Folder
fileChooser.newFolderAccessibleName				= New Folder
fileChooser.listViewButtonToolTipText			= List
fileChooser.listViewButtonAccessibleName		= List
fileChooser.detailsViewButtonToolTipText		= Details
fileChooser.detailsViewButtonAccessibleName		= Details
fileChooser.openButtonText						= Open
fileChooser.openButtonToolTipText				= Open selected file
fileChooser.saveButtonText						= Save
fileChooser.saveButtonToolTipText				= Save selected file
fileChooser.cancelButtonText					= Cancel
fileChooser.cancelButtonToolTipText				= Abort file chooser dialog

validator.projectPathEmpty						= Project folder text field is empty.
validator.notJSONfile							= Not a JSON file:
validator.JSONPathEmpty							= JSON file text field is empty.
validator.noKeywords							= Namespace must not contain Java keywords.
validator.notFollowingConventions				= Namespace does not follow Java naming conventions:

jsonParser.couldNotReadFile						= Could not read file:

projectGenerator.couldNotCreateProject			= Could not create Project. Project might already exist:
projectGenerator.projectSuccess					= <html><b>Project was successfully generated!</b></html>